<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[分类技术 | Castiel Blog]]></title>
  <link href="http://suerzhang.github.io/blog/categories/技术/atom.xml" rel="self"/>
  <link href="http://suerzhang.github.io/"/>
  <updated>2015-01-01T22:56:04+08:00</updated>
  <id>http://suerzhang.github.io/</id>
  <author>
    <name><![CDATA[Castiel]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[添加多说评论]]></title>
    <link href="http://suerzhang.github.io/blog/20141227/tian-jia-duo-shuo-ping-lun.html/"/>
    <updated>2014-12-27T00:01:00+08:00</updated>
    <id>http://suerzhang.github.io/blog/20141227/tian-jia-duo-shuo-ping-lun</id>
    <content type="html"><![CDATA[<p>最近又突然想给博客做点改变，然后看到其他人添加了很多东西，今天就先添加一个评论吧。看到多说貌似不错，就用他了。
###首先去多说注册个账号
自己百度
###添加评论
在_config.yml 中添加</p>

<p><code>
# duoshuo comments
duoshuo_comments: true
duoshuo_short_name: yourname #这里的yourname是你在多说注册的二级域名，比如我是superzhang.duoshuo.com.这里就填superzhang
</code></p>

<p>在 source/_layouts/post.html 中的 disqus代码</p>

<p>```py

```</p>

<p>下方添<strong>加多说评论</strong>模块<!--more--></p>

<p>```py

```</p>

<p>如果你希望一些单独的页面下方也放置评论功能，譬如 rake new_page[“xxx”] 产生的页面也能评论，那么请在 source/_layouts/page.html 中也做如上的修改。</p>

<p>创建一个<strong>source/_includes/post/duoshuo.html</strong></p>

<p><code>html
&lt;!-- Duoshuo Comment BEGIN --&gt;
&lt;div class="ds-thread" data-title="分类技术"&gt;&lt;/div&gt;
&lt;script type="text/javascript"&gt;
  var duoshuoQuery = {short_name:"superzhang.duoshuo.com"};
  (function() {
    var ds = document.createElement('script');
    ds.type = 'text/javascript';ds.async = true;
    ds.src = 'http://static.duoshuo.com/embed.js';
    ds.charset = 'UTF-8';
    (document.getElementsByTagName('head')[0] 
    || document.getElementsByTagName('body')[0]).appendChild(ds);
  })();
&lt;/script&gt;
&lt;!-- Duoshuo Comment END --&gt;
</code></p>

<p>随后，再修改<strong>_includes/article.html</strong> 在</p>

<p><code>py

</code></p>

<p>下方添加如下代码</p>

<p><code>py
| &lt;a href="#comments"&gt;Comments&lt;/a&gt;
         
</code></p>

<p>###侧边栏插入最新评论</p>

<p>首先在<strong>_config.yml</strong>中再插入如下代码</p>

<p><code>
duoshuo_asides_num: 10      # 侧边栏评论显示条目数
duoshuo_asides_avatars: 0   # 侧边栏评论是否显示头像
duoshuo_asides_time: 0      # 侧边栏评论是否显示时间
duoshuo_asides_title: 0     # 侧边栏评论是否显示标题
duoshuo_asides_admin: 0     # 侧边栏评论是否显示作者评论
duoshuo_asides_length: 18   # 侧边栏评论截取的长度
</code></p>

<p>再创建_includes/custom/asides/recent_comments.html</p>

<p>```py</p>
<section>
<h1>Recent Comments</h1>
<ul class="ds-recent-comments" data-num-items="10" data-show-avatars="0" data-show-time="0" data-show-title="0" data-show-admin="0" data-excerpt-length="18"></ul>

</section>
<p><code>
</code>``
最后，在<strong>_config.yml</strong>中的blog_index_asides行或pages_asides行或post_asides添加</p>

<p><code>
custom/asides/recent_comments.html
</code></p>

<p>rake generate</p>

<p>rake preview
下就可以看效果了 </p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vim插件配置]]></title>
    <link href="http://suerzhang.github.io/blog/20130228/vimcha-jian-pei-zhi.html/"/>
    <updated>2013-02-28T21:06:00+08:00</updated>
    <id>http://suerzhang.github.io/blog/20130228/vimcha-jian-pei-zhi</id>
    <content type="html"><![CDATA[<p>看到别人的博客介绍Vundle之前，我用Pathogen管理插件。Pathogen还算方便，只需要把相应插件，放在bundle目录下即可，不需要很复杂的设置，管理起来也一目了然，而且当第一次使用vim的时候，你会觉的很容易上手。
<!--more-->
感谢现在的互联网，能让我看到很多好的东西，能让我很容易能上手神奇vim，如果没有那么多插件，vim只能觉的很普通一样。Vundel的插件安装逻辑结构是这样的：</p>

<p>在Vim Script选好你想要的插件；
在VIM的配置文件中写一句 Bundle plugin_name；
执行一下Vundle的初始化命令，插件就装好了； - 升级和卸载也是同样的简单；
完美的世界！</p>

<p>Vundle的配置</p>

<p>Vundle的安装很简单：</p>

<p>git clone http://github.com/gmarik/vundle.git ~/.vim/bundle/vundle</p>
<pre><code>然后写配置文件.vimrc：
'set nocompatible    " be iMproved'
filetype off        " required!
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()
" let Vundle manage Vundle
" required!
Bundle 'gmarik/vundle'
"vim-scripts repos
Bundle 'vim-plugin-foo'
Bundle 'vim-plugin-bar'
filetype plugin indent on    " required!
</code>
其中Bundle后面的内容，就是插件的名字，插件维护在Vim-Script.org。

然后，打开VIM之后，可以输入以下命令：

"安装插件:
<pre><code>:BundleInstall
"更新插件:
:BundleInstall!
"卸载不在列表中的插件:
:BundleClean</code>
<bra>可以从Vim-Script.org找到很多你想要的插件的名字，然后在.vimrc中添加就可以了


插件介绍

有了Vundle，再装插件就是件享受的事情了。我常用的插件有：

<pre><code>相较于Command-T等查找文件的插件，ctrlp.vim最大的好处在于没有依赖，干净利落
Bundle 'ctrlp.vim'

在输入()，""等需要配对的符号时，自动帮你补全剩余半个
Bundle 'AutoClose'

神级插件，ZenCoding可以让你以一种神奇而无比爽快的感觉写HTML、CSS
Bundle 'ZenCoding.vim'

在()、""、甚至HTML标签之间快速跳转；
Bundle 'matchit.zip'

显示行末的空格；
Bundle 'ShowTrailingWhitespace'

JS代码格式化插件；
Bundle '_jsbeautify'

用全新的方式在文档中高效的移动光标，革命性的突破
Bundle 'EasyMotion'

自动识别文件编码；
Bundle 'FencView.vim'

必不可少，在VIM的编辑窗口树状显示文件目录
Bundle 'The-NERD-tree'

NERD出品的快速给代码加注释插件，选中，`ctrl+h`即可注释多种语言代码；
Bundle 'The-NERD-Commenter'

解放生产力的神器，简单配置，就可以按照自己的风格快速输入大段代码。
Bundle 'UltiSnips'

让代码更加易于纵向排版，以=或,符号对齐
Bundle 'Tabular'

迄今位置最好的自动VIM自动补全插件了吧
Vundle的这个写法，是直接取该插件在Github上的repo


Bundle 'Valloric/YouCompleteMe'
<br />以上插件可以在vim-script.org找到源码和文档，ZenCoding和EasyMotion演示点链接,你会心动的。
</code>

</pre></bra></pre></pre>
]]></content>
  </entry>
  
</feed>
